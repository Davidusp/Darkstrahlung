import numpy as np
import matplotlib 
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure
from scipy.integrate import quad
import scipy.interpolate as inter


def main():

    mDP = 0.000001 #MeV
    kappas = 0.06493816316
    theta=np.linspace(3.0*np.pi/180,87*np.pi/180,15) # Zenith angles from 0 to 90 degrees, considering 3 degrees resolution
    x=np.linspace(0,(700/np.cos(theta[14]))/700*1855*100,5000) # Define step length in cm used in the muon attenuation and DP generated by Bremsstrahlung in the rock.

    q = 0.30282212088 #Elementary charge in natural units
    alpha = q**2/(4*np.pi) #Fine structure constant
    alphaline = (q*kappas)**2/(4*np.pi)

    # with open('/home/dfreitas/DPnum_Comp/Absorption/PeXS_E vs Sig.txt', 'r') as archive:
    #         arq = archive.read() 
    with open('/home/davidc/Documents/Master\'s Analisys/Parameter space/Codes/Absorption/PeXS_E vs Sig.txt', 'r') as archive:
            arq = archive.read() 

    lines = arq.split("\n")
    lines = lines[:-1]
    
    for row in range(0, len(lines)):
        lines[row] = lines[row].split(" ")
        lines[row] = [float(x) for x in lines[row]]

    sigAbs = np.zeros(len(lines))
    E_k = np.zeros(len(lines))

    for l in range(0, len(lines)):
        E_k[l] = lines[l][0]
        if mDP < E_k[l]:
            sigAbs[l] = (lines[l][1]/np.sqrt(1-mDP**2/E_k[l]**2))*(alphaline/alpha)*(1e24/2.74e22) #barns/atom

    CSabsfunc = inter.interp1d(E_k, sigAbs, kind = 'linear', fill_value="extrapolate")
    #CSabsfunc = inter.interp1d(E_k, sigAbs, kind = 'linear')

    E_k = np.logspace(np.log10(mDP+0.001*mDP),np.log10(100), len(x))
    
    #s = 2 #constant for spin-0 particles cross-section. s=2/3 for spin-1 particles.
    #sigAbs = (kappas/epsilon)**2*(3*s/2)*CScompfunc(E_k)
    sigAbs = CSabsfunc(E_k)

    f1=plt.figure()
    plt.title('Cross-section')
    plt.plot(E_k, sigAbs, c='blue', linewidth=2)
    plt.xlabel("$E_{k}[MeV]$")
    plt.ylabel("$\sigma~[barn/atom]$")
    plt.yscale('log')
    plt.xscale('linear')
    #plt.ylim(1E+2, 5e+9)
    #plt.xlim(1E-2,1)
    #plt.legend(loc = 'upper right')
    plt.grid(True)
    #plt.savefig("/home/davidc/Documents/Master's Analisys/Results Compton/CS_%dE_%dcos_k=%f_mphi=%f.png" %(len(E_k), 15000,1e-4, i))
    plt.show()
    plt.close()

main()